<?php

/**
 * This is the model base class for the table "user".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giiy.
 * If any changes are necessary, you must set or override the required
 * property or method in class "User".
 *
 * Columns in table "user" available as properties of the model,
 * followed by relations of table "user" available as properties of the model.
 *
 * @property integer $id
 * @property string $username
 * @property string $password
 * @property string $email
 * @property string $activkey
 * @property integer $superuser
 * @property integer $status
 * @property string $firstname
 * @property string $lastname
 * @property string $created
 * @property string $lastvisit
 * @property integer $city_id
 * @property string $modified
 *
 * @property UserOauth[] $userOauths
 *
 */
abstract class BaseUser extends CActiveRecord {

    public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'User|Users', $n);
	}

	public function rules() {
		return array(
			array('created, modified', 'required'),
			array('superuser, status, city_id', 'numerical', 'integerOnly'=>true),
			array('username, firstname, lastname', 'length', 'max'=>255),
			array('password, email, activkey', 'length', 'max'=>128),
			array('lastvisit', 'safe'),
			array('username, password, email, activkey, superuser, status, firstname, lastname, lastvisit, city_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, username, password, email, activkey, superuser, status, firstname, lastname, created, lastvisit, city_id, modified', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'userOauths' => array(self::HAS_MANY, 'UserOauth', 'user_id'),
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'username' => Yii::t('app', 'Username'),
			'password' => Yii::t('app', 'Password'),
			'email' => Yii::t('app', 'Email'),
			'activkey' => Yii::t('app', 'Activkey'),
			'superuser' => Yii::t('app', 'Superuser'),
			'status' => Yii::t('app', 'Status'),
			'firstname' => Yii::t('app', 'Firstname'),
			'lastname' => Yii::t('app', 'Lastname'),
			'created' => Yii::t('app', 'Created'),
			'lastvisit' => Yii::t('app', 'Lastvisit'),
			'city_id' => Yii::t('app', 'City'),
			'modified' => Yii::t('app', 'Modified'),
			'userOauths' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('t.id', $this->getAttribute('id'));
		$criteria->compare('t.username', $this->getAttribute('username'), true);
		$criteria->compare('t.password', $this->getAttribute('password'), true);
		$criteria->compare('t.email', $this->getAttribute('email'), true);
		$criteria->compare('t.activkey', $this->getAttribute('activkey'), true);
		$criteria->compare('t.superuser', $this->getAttribute('superuser'));
		$criteria->compare('t.status', $this->getAttribute('status'));
		$criteria->compare('t.firstname', $this->getAttribute('firstname'), true);
		$criteria->compare('t.lastname', $this->getAttribute('lastname'), true);
		$criteria->compare('t.created', $this->getAttribute('created'), true);
		$criteria->compare('t.lastvisit', $this->getAttribute('lastvisit'), true);
		$criteria->compare('t.city_id', $this->getAttribute('city_id'));
		$criteria->compare('t.modified', $this->getAttribute('modified'), true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}

}